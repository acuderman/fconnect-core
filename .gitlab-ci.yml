image: docker:19.03.12

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
stages:
  - build
  - deploy

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - node_modules/

build_image:
  stage: build
  variables:
    NODE_ENV: production
  services:
    - docker:dind
  before_script:
    - export DOCKER_HOST='tcp://docker:2375/'
    - export DOCKER_DRIVER='overlay2'
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker build -t cudr12/fconnect-core .
    - docker push cudr12/fconnect-core

k8s:
  stage: deploy
  before_script:
    - apk add --update --no-cache curl git     # Install dependencies
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl    # Download kubectl binary
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p /etc/deploy
    - echo $KUBERNETES_CONFIGURATION | base64 -d > /etc/deploy/config
  variables:
    KUBECONFIG: /etc/deploy/config
  script:
    - kubectl config set-context --current --namespace=acuderman
    - kubectl replace -f ./k8s/deployment.yaml

